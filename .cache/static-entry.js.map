{"version":3,"sources":["../../src/cache-dir/static-entry.js"],"names":["pathChunkName","name","path","$","createElement","layout","layouts","index","props","children","module","exports","locals","callback","linkPrefix","__PREFIX_LINKS__","__LINK_PREFIX__","bodyComponent","location","pathname","context","layoutProps","routeProps","page","find","components","componentChunkName","json","jsonName","results","component","headComponents","body","postBodyComponents","bodyRenderProps","chunkManifest","require","unshift","__html","stats","e","dascripts","forEach","fetchKey","script","fetchedScript","prefixedScript","push","pluginHeadComponents","concat","pluginPostBodyComponents","pluginBodyRenderProps","html"],"mappings":"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","file":"static-entry.js","sourcesContent":["import React from \"react\"\nimport { renderToString, renderToStaticMarkup } from \"react-dom/server\"\nimport { StaticRouter, Route, withRouter } from \"react-router-dom\"\nimport Html from \"../src/html\"\nimport { kebabCase, get, merge, isArray } from \"lodash\"\nimport apiRunner from \"./api-runner-ssr\"\nimport pages from \"./pages.json\"\nimport syncRequires from \"./sync-requires\"\n\nconst pathChunkName = path => {\n  const name = path === `/` ? `index` : kebabCase(path)\n  return `path---${name}`\n}\n\nconst $ = React.createElement\n\n// Use default layout if one isn't set.\nlet layout\nif (syncRequires.layouts.index) {\n  layout = syncRequires.layouts.index\n} else {\n  layout = props => <div>{props.children()}</div>\n}\n\nmodule.exports = (locals, callback) => {\n  let linkPrefix = `/`\n  if (__PREFIX_LINKS__) {\n    linkPrefix = `${__LINK_PREFIX__}/`\n  }\n\n  const bodyComponent = $(\n    StaticRouter,\n    {\n      location: {\n        pathname: locals.path,\n      },\n      context: {},\n    },\n    $(withRouter(layout), {\n      children: layoutProps =>\n        $(Route, {\n          children: routeProps => {\n            const props = layoutProps ? layoutProps : routeProps\n            const page = pages.find(\n              page => page.path === props.location.pathname\n            )\n            return $(syncRequires.components[page.componentChunkName], {\n              ...props,\n              ...syncRequires.json[page.jsonName],\n            })\n          },\n        }),\n    })\n  )\n\n  // Let the site or plugin render the page component.\n  const results = apiRunner(\n    `replaceServerBodyRender`,\n    { component: bodyComponent, headComponents: [] },\n    {}\n  )\n  let {\n    body,\n    headComponents,\n    postBodyComponents,\n    ...bodyRenderProps\n  } = results[0]\n\n  // If no one stepped up, we'll handle it.\n  if (!body) {\n    body = renderToString(bodyComponent)\n  }\n\n  // Check if vars were created.\n  if (!bodyRenderProps) {\n    bodyRenderProps = {}\n  }\n  if (!headComponents) {\n    headComponents = []\n  }\n  if (!postBodyComponents) {\n    postBodyComponents = []\n  }\n\n  // Add the chunk-manifest as a head component.\n  const chunkManifest = require(`!raw!../public/chunk-manifest.json`)\n\n  postBodyComponents.unshift(\n    <script\n      id=\"webpack-manifest\"\n      dangerouslySetInnerHTML={{\n        __html: `\n            //<![CDATA[\n            window.webpackManifest = ${chunkManifest}\n            //]]>\n            `,\n      }}\n    />\n  )\n\n  let stats\n  try {\n    stats = require(`../public/stats.json`)\n  } catch (e) {\n    // ignore\n  }\n\n  const dascripts = [\n    `commons`,\n    `app`,\n    `layout-component---index`,\n    pathChunkName(locals.path),\n    pages.find(page => page.path === locals.path).componentChunkName,\n  ]\n  dascripts.forEach(script => {\n    const fetchKey = `assetsByChunkName[${script}]`\n\n    let fetchedScript = get(stats, fetchKey)\n    // If sourcemaps are enabled, then the entry will be an array with\n    // the script name as the first entry.\n    fetchedScript = isArray(fetchedScript) ? fetchedScript[0] : fetchedScript\n    const prefixedScript = `${linkPrefix}${fetchedScript}`\n\n    // Make sure we found a component.\n    if (prefixedScript === `/`) {\n      return\n    }\n\n    // Add preload <link>s for scripts.\n    headComponents.unshift(\n      <link rel=\"preload\" href={prefixedScript} as=\"script\" />\n    )\n\n    // Add script tags for the bottom of the page.\n    postBodyComponents.push(\n      <script key={prefixedScript} src={prefixedScript} />\n    )\n  })\n\n  // Call plugins to let them add to or modify components/props.\n  const pluginHeadComponents = apiRunner(\n    `modifyHeadComponents`,\n    { headComponents },\n    []\n  )\n  headComponents = headComponents.concat(pluginHeadComponents)\n\n  const pluginPostBodyComponents = apiRunner(\n    `modifyPostBodyComponents`,\n    { postBodyComponents },\n    []\n  )\n  postBodyComponents = postBodyComponents.concat(pluginPostBodyComponents)\n\n  const pluginBodyRenderProps = apiRunner(\n    `modifyBodyRenderProps`,\n    { bodyRenderProps },\n    {}\n  )\n  bodyRenderProps = merge(bodyRenderProps, pluginBodyRenderProps)\n\n  const html = `<!DOCTYPE html>\\n ${renderToStaticMarkup(<Html {...bodyRenderProps} headComponents={headComponents} postBodyComponents={postBodyComponents} body={body} path={locals.path} />)}`\n  callback(null, html)\n}\n"]}